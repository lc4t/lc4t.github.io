---
import { SITE } from "@config";
import { Debug } from "astro/components";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import PostCard from "@components/PostCard";
import LinkButton from "@components/LinkButton.astro";
import slugify from "@utils/slugify";
import type { CollectionEntry } from "astro:content";
import type { BlogFrontmatter } from "@content/_schemas";
import { getSortedPostsByYear } from "@utils/utils";
import { getSortedPosts } from "@utils/getSortedPosts";
export interface Props {
  pageNum: number;
  totalPages: number;
  posts: CollectionEntry<"blog">[];
}

const { pageNum, totalPages, posts } = Astro.props;

const prev = pageNum > 1 ? "" : "disabled";
const next = pageNum < totalPages ? "" : "disabled";
const archived = await Astro.glob("../content/blog/archive/*.md");

const sortedPostsByYear = getSortedPostsByYear(posts);
---

<Layout title={`Posts | ${SITE.title}`}>
  <Header activeNav="posts" />
  <Main pageTitle="Posts" pageDesc="All the articles I've posted.">
    <!-- <Debug answer={slugify(posts[0].data)} /> -->
    <!-- <Debug getSortedPosts={getSortedPosts(posts)} /> -->
    <!-- <Debug getSortedPostsByYear={sortedPostsByYear} /> -->

    <div>
      {
        Object.keys(sortedPostsByYear)
          .sort((a, b) => b.localeCompare(a))
          .map(year => (
            <div>
              <h3>{year}</h3>
              {sortedPostsByYear[year].map(post => (
                // <Debug data={post.data} />
                <PostCard
                  href={`/posts/${slugify(post.data)}`}
                  title={post.data.title}
                  pubDatetime={post.data.pubDatetime}
                />
              ))}
            </div>
          ))
        // getSortedPostsByYear(posts).map(post => (
        //   <PostCard href={`/posts/${slugify(post)}`} frontmatter={post} />
        // ))
      }
    </div>
  </Main>
</Layout>

<style>
  .pagination-wrapper {
    @apply mb-8 mt-auto flex justify-center;
  }
  .disabled {
    @apply pointer-events-none select-none opacity-50 hover:text-skin-base group-hover:fill-skin-base;
  }
  .disabled-svg {
    @apply group-hover:!fill-skin-base;
  }
</style>
